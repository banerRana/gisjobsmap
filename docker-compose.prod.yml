version: '3.2'

services:

  # Flask API
  backend:
    restart: always
    build:
      context: ./backend
      dockerfile: ../docker/prod/backend.Dockerfile
    env_file:
      - ./docker/prod/.env
    ports:
      - 5000:5000

  scraper:
    restart: always
    build:
      context: ./scraper
      dockerfile: ../docker/scraper.Dockerfile
    env_file:
      - ./docker/prod/.env
      - ./docker/scraper.env
    volumes:
      - ./scraper:/app
    depends_on:
      - backend
    tty: true

  client:
    restart: unless-stopped
    build:
      context: ./client
      dockerfile:  ../docker/prod/client.Dockerfile
    volumes:
      - ./client/nginx/nginx:/etc/nginx/conf.d
      - ./client/nginx/certbot/conf:/etc/letsencrypt
      - ./client/nginx/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    env_file:
      - ./docker/prod/.env
    depends_on:
      - backend
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./client/nginx/certbot/conf:/etc/letsencrypt
      - ./client/nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"